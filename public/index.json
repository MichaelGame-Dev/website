
[{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/categories/programming/","section":"Categories","summary":"","title":"['Programming']","type":"categories"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/categories/ruby-on-rails/","section":"Categories","summary":"","title":"['Ruby on Rails']","type":"categories"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/","section":"Blowfish","summary":"","title":"Blowfish","type":"page"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" The Journey So Far Last year, I watched this video. In it ThePrimeagen and TJ DeVries interview DHH. While the interview goes over a lot of different topics, what appealed to me the most was the way DHH talked about his love for Ruby. I\u0026#39;ve heard people talk about why they like or love a programming language, but I don\u0026#39;t know that I\u0026#39;ve heard anyone talk about it with that much zeal and excitement.\nAnother appealing point in this video was about focusing on keeping things simple. While I\u0026#39;m still early in the journey, this was an appealing thought to me. I\u0026#39;ve looked at web dev off and on for the past few years, but it\u0026#39;s always seemed like trying to actually start with web dev was a mountain, there are so many things that people will tell you to learn. Beyond HTML and CSS, I had no idea where to go from there.\nThat conversation led me to checking out Ruby on Rails a little bit and that indirectly ended up getting me to try out DragonRuby. I discuss that journey more fully in this video.\nFrom there, I\u0026#39;ve mostly focused on learning Ruby via DragonRuby. However, I\u0026#39;ve finally come back to dig into Ruby on Rails. Why? A few key reasons:\nRight now, I have to figure out some game design and art aspects to my game, while I\u0026#34;m doing that, it makes sense to me to focus some of my programming time on Rails becauseâ€¦ I\u0026#39;ve always wanted to know a way to create web project ideas I have (and that list keeps growing). To me, Rails being a more batteries included framework seems to fit that bill, and to boot, I get to practice more Ruby. Plus, Rails 8 \u0026amp; SQLite? Yes please, for most of my projects, this will be plenty to start with. I\u0026#39;ve seen myself improve in programming in the past 7 months or so that I\u0026#39;ve used DragonRuby. I want to keep that rolling. As I touched on in the video above, the lack of contenxt switching in DragonRuby has kept me coding longer and that is something I believe is super important for me to get better at it. Where We Are I\u0026#39;ve been putting time in looking through the Rails Guides. I\u0026#39;ve also separately created a small forum like project that has a bit more complex model setup (Github repo here). My business analyst background has had me do a lot of SQL querying and that has come in handy for understanding the relationships, but I\u0026#39;ve been focused on trying to learn the Rails way of doing things. I think in the near future, I can put together a resource list for others looking to learn Ruby on Rails or Ruby.\nThe Good I\u0026#39;ve gotten relatively comfortable with models and am getting there on controllers. The pre-existing knowledge I have about databases has helped me conceptualize the relationships between tables fairly well. As I move forward, I want to focus more on using functionality like `include` and eager loading as the models get bit more complex to keep query counts down.\nI can definitely understand based on what I\u0026#39;ve seen so far about how Rails can help you move very quickly. rails generate scaffold ... can do a lot to get a new piece of functionality working quickly. From there you may need remove or update some controller actions, drop some view templates, etc. Maybe in the real world you\u0026#39;re not using the scaffold that much, but I can see how generating models, controllers, etc. can be a quick way to get things moving in the right direction.\nThe Opportunities A few key challenges stand out and I have some ideas on trying to get past them\nThe Controller To View Connection Most of the stuff I\u0026#39;ve done so far has been fairly simple with one view to one controller. I want to look more closely at the TypeCraft \u0026#39;Rails New\u0026#39; video series and look at the final homepage as it looked like it contained data from both models of the project.\nI also found a nice tutorial project where the focus is on learning Turbo, but they have an interesting Rails setup I want to study a bit more. I\u0026#39;m pretty sure I know what I need to do, but I sometimes struggle with wanting to do it the Rails way.\nAs a bonus here, I want to pick up Turbo so I can do things like Turbo Streams/Frames to enable stuff like inline edits.\nTests One area that I\u0026#39;ve struggled with so far is tests seemingly being very counterintuitive when reading them. I\u0026#39;ve been reading Agile Web Development With Rails 8, and trying to parse the tests has been tricky. I haven\u0026#39;t done as much testing with the DragonRuby side of things in programming, so I suspect that\u0026#39;s part of the reason.\nI plan to dig a bit more and find some more solid resouces just to make sure I understand them better, and also to avoid the generic bad example tests that some give.\nThe Rails \u0026#39;Secret Handshake\u0026#39; I think this is one of the trickiest parts of learning Rails now. There\u0026#39;s a lot of conventions built into Rails which means there are ways to write less code to get something done.\nBut for someone that\u0026#39;s newer to Ruby/Rails that can be a bit tougher of a thing to figure out. There are times I look at an example and I\u0026#39;m just like, \u0026#34;How should I know that syntax??\u0026#34;\nI think the biggest thing here for me is to keep programming and seeing more of the patterns for these. I have also started reading the book 99 Bottles of OOP to help me get better at this process as well.\nThe Future? While I still have a long ways to go right now, my current knowledge of Rails has definitely given me some ideas on future sites I want to create. Some will be a bit unique, for example, I\u0026#39;d like to build a pomodoro timer that I can have on my phone as a PWA. I think that\u0026#39;s a really simple, though a bit unique Rails app. I also have an idea for an app for a stream dashboard as I get back to doing dev streams. This would be something designed for local use only, but it would give me some time to really work on understanding systems like ActionCable (and a bit of Turbo/Hotwire).\nI also have a few app ideas on potential sites that may go live. One is a self-hostable alternative to a pretty big sass. I\u0026#39;m not expecting the app to be huge, but I think it has potential to be interesting in certain situations. I\u0026#39;m hoping it to be in the model of the ONCE apps by 37 signals where I\u0026#39;m not doing the hosting. The actual idea is fairly simple, but it\u0026#39;s going to need a lot of polish (and learning on my part) to turn it into what it needs to be to give the right UX.\nI\u0026#39;m sure there\u0026#39;s also the possibility to connect a DragonRuby game to a Rails API site of some kind.\nWho knows, maybe this site becomes a Rails site, then I could do things like add comments. I\u0026#39;d have to figure out how to remove some of the friction. I\u0026#39;ve gotten so used to writing docs in Org Mode. I\u0026#39;m hoping that once the markdown ActionText editor drops that I can have a script convert my org docs to markdown and automate that process.\nOverall Overall, I think my excursion into Rails has went well so far, it\u0026#39;s given me some key areas to focus on in Ruby and I think with time will make me that much better of a Ruby developer for DragonRuby. This is one of the reasons I decided to give DragonRuby a shot as it gave me another avenue to explore Ruby. I think the combo of DragonRuby and Rails gives me two very different ways to approach Ruby, with DR you almost start with a blank slate each project and have to build up your tools, while with Rails, you start with the blueprint and all the pieces ready for you to assemble.\n","date":"20 July 2025","externalUrl":null,"permalink":"/posts/early-thoughts-learn-ruby-on-rails/","section":"Posts","summary":"","title":"Early Thoughts About Learning Ruby on Rails,","type":"posts"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/tags/programming/","section":"Tags","summary":"","title":"Programming","type":"tags"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/tags/rails/","section":"Tags","summary":"","title":"Rails","type":"tags"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/tags/ror/","section":"Tags","summary":"","title":"RoR","type":"tags"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/tags/ruby/","section":"Tags","summary":"","title":"Ruby","type":"tags"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"20 July 2025","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":" ## What is Development With Michael all about? This is a site serves a few functions:\nTo allow me to showcase my games (especially Radiant Bricks!) and other programming projects To post thoughts about things I learn in programming or areas where I\u0026#39;ve found difficulty Occasionally posting something more of a tutorial or cookbook style post to share some of the knowledge I\u0026#39;ve gained. ","externalUrl":null,"permalink":"/about/","section":"Blowfish","summary":"","title":"About","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":" Below are a list of my games\nRadiant Bricks Game Jam Games ","externalUrl":null,"permalink":"/games/","section":"Blowfish","summary":"","title":"My Games","type":"page"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]